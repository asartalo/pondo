/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.5.1
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2016 Daniel Eden
 */

@import 'modules/animate';

.animated {
  animation-duration: 300ms;
  animation-fill-mode: both;

  &.infinite {
    animation-iteration-count: infinite;
  }

  &.alternate {
    animation-direction: alternate;
  }

  &.iteration {
    animation-iteration-count: 2;
  }
}

@include set-animation(zoom-out) {
  from {
    opacity: 1;
  }

  50% {
    opacity: 0;
    @include transform(scale3d(0.3, 0.3, 0.3));
  }

  to {
    opacity: 0;
  }
}

@include set-animation(zoom-in) {
  from {
    opacity: 0;
    @include transform(scale3d(0, 0, 0));
  }

  to {
    opacity: 1;
    @include transform(scale3d(1, 1, 1));
  }
}

@include set-animation(fade-in-down) {
  from {
    opacity: 0;
    @include transform(translate3d(0, -100%, 0));
  }

  to {
    opacity: 1;
    @include transform(translate3d(0, 0, 0));
  }
}

@include set-animation(fade-in-up) {
  from {
    opacity: 0;
    @include transform(translate3d(0, 100%, 0));
  }

  to {
    opacity: 1;
    @include transform(translate3d(0, 0, 0));
  }
}

@include set-animation(fade-out) {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@include set-animation(fade-out-up) {
  from {
    opacity: 1;
    @include transform(translate3d(0, 0, 0));
  }

  to {
    opacity: 0;
    @include transform(translate3d(0, -100%, 0));
  }
}


@include set-animation(fade-out-down) {
  from {
    opacity: 1;
    @include transform(translate3d(0, 0, 0));
  }

  to {
    opacity: 0;
    @include transform(translate3d(0, 100%, 0));
  }
}

@include set-animation(zoom-out) {
  0% {
    opacity: 1;
    @include transform(scale3d(1, 1, 1));
  }

  100% {
    opacity: 0;
    @include transform(scale3d(0, 0, 0));
  }
}

@include set-animation(slide-up) {
  from {
    @include transform(translate3d(0, 100%, 0));
  }

  to {
    @include transform(translate3d(0, 0, 0));
  }
}

@include set-animation(slide-down) {
  from {
    @include transform(translate3d(0, 0, 0));
  }
  to {
    @include transform(translate3d(0, 100%, 0));
  }
}

